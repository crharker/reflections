What happens when you initialize a repository? Why do you need to do it?
 It adds the .git folder used for tracking changes

How is the staging area different from the working directory and the repository?
What value do you think it offers?
 The working directory has all your files, the staging area has the files you have
 added to be tracked. The repository has all the files that have been commited.

How can you use the staging area to make sure you have one commit per logical
change?
  If you update various files, you can stage them in sequence to provide the 
  logical updates that you want.

What are some situations when branches would be helpful in keeping your history
organized? How would branches help?
  While working on code, often I am going in and updating it adding new features.
  This will allow me to work on a feature and if a bug or quick update is needed
  prior to having the new feature completed, I can easily update the code to 
  reflect that.

How do the diagrams help you visualize the branch structure?

What is the result of merging two branches together? Why do we represent it in
the diagram the way we do?

What are the pros and cons of Git's automatic merging vs. always doing merges
manually?
